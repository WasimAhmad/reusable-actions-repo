name: 'Push CA into Docker Images'
description: 'Inserts CA certificates into Docker images and pushes them to Google Artifact Registry'
inputs:
  projectId:
    description: 'GCP Project ID'
    required: true
  region:
    description: 'GCP Region for Artifact Registry'
    required: true
  repository:
    description: 'Docker Repository'
    required: true
  caCertBase64:
    description: 'Base64 encoded CA Certificate.'
    required: true
  gcrCredentials:
    description: 'Google Cloud service account key for authentication.'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Download Image Name Artifact
      uses: actions/download-artifact@v2
      with:
        name: image-name
        path: .
      
    - name: Read Image Name
      id: read-imagename
      run: |
        echo "::set-output name=imagename::$(cat image_name.txt)"
      shell: bash

    - name: Download Docker image from cache
      uses: actions/download-artifact@v2
      with:
        name: docker-image-my-custom-alpine
        path: /tmp/docker-cache

    - name: Load Docker image from tarball
      run: sudo docker load -i /tmp/docker-cache/my-custom-alpine.tar
      shell: bash
    - name: Read Local Image Tag
      id: read-tag
      run: |
        echo "::set-output name=tag::$(cat /tmp/docker-cache/image-tag.txt)"
      shell: bash

    - name: Decode CA Certificate
      run: echo "${{ secrets.caCertBase64 }}" | base64 -d > decoded-ca-cert.pem
      shell: bash

    - id: 'auth'
      uses: 'google-github-actions/auth@v2.1.2'
      with:
        credentials_json: '${{ inputs.gcrCredentials }}'
        project_id: ${{ inputs.projectId }}

    - name: set up google cloud
      uses: google-github-actions/setup-gcloud@v2.1.0
      with:
        project_id: ${{ inputs.projectId }}

    - name: Configure Docker for Google Artifact Registry
      run: gcloud auth configure-docker ${{ inputs.region }}-docker.pkg.dev
      shell: bash
    - name: Set gcloud project
      run: gcloud config set project ${{inputs.projectId}}
      shell: bash
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.21'

    - name: Install incert
      run: go install github.com/wasimahmad/incert@latest
      shell: bash
    - name: Tag the loaded image
      run: sudo docker tag ${{ steps.read-tag.outputs.tag }} ${{ inputs.region }}-docker.pkg.dev/${{ inputs.projectId }}/${{ inputs.repository }}/${{ steps.read-imagename.outputs.imagename }}
      shell: bash
    - name: Push the source image
      run: sudo docker push ${{ inputs.region }}-docker.pkg.dev/${{ inputs.projectId }}/${{ inputs.repository }}/${{ steps.read-imagename.outputs.imagename }}
      shell: bash
    - name: Insert CA certificates into Docker image and push
      run: |
        incert -ca-certs-file decoded-ca-cert.pem -image-url ${{ inputs.region }}-docker.pkg.dev/${{ inputs.projectId }}/${{ inputs.repository }}/${{ steps.read-imagename.outputs.imagename }} -dest-image-url ${{ inputs.region }}-docker.pkg.dev/${{ inputs.projectId }}/${{ inputs.repository }}/${{ steps.read-imagename.outputs.imagename }}
      shell: bash